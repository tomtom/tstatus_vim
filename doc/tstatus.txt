*tstatus.txt*   An extensible statusline to monitor options & variables
                Author: Thomas Link, micathom AT gmail com?subject=vim

This plugin provides a still rather simple statusline manager to monitor 
options and variables. If an option's or variable's value changes, it is 
displayed in the statusline.

In order to monitor options/variables, either set |g:tstatus_names| in 
|vimrc| or call |:TStatusregister|.

Call |:TStatus| to set or reset the status line or the ruler.


-----------------------------------------------------------------------
Install~

Either use the zip archive:

- Download the zip archive
- Extract it to ~/.vim/pack/tml/start/tstatus

or install from github:

- Start a terminal
- Change the working directory to ~/.vim/pack/tml/start/
- Type: git clone https://github.com/tomtom/tstatus_vim

NOTE: On Windows, ~/.vim might be ~/vimfiles. Please see 'runtimepath' for 
details.


========================================================================
Contents~

        g:tstatus_timefmt ....... |g:tstatus_timefmt|
        g:tstatus_exprs ......... |g:tstatus_exprs|
        g:tstatus_names ......... |g:tstatus_names|
        g:tstatus_ignore ........ |g:tstatus_ignore|
        g:tstatus_events ........ |g:tstatus_events|
        g:tstatus_colorscheme ... |g:tstatus_colorscheme|
        :TStatus ................ |:TStatus|
        :TStatusregister ........ |:TStatusregister|
        :TStatusregister1 ....... |:TStatusregister1|
        :TStatusreset ........... |:TStatusreset|


------------------------------------------------------------------------
                                                    *plugin/tstatus.vim*
                                                    *g:tstatus_timefmt*
g:tstatus_timefmt              (default: '')
    A string for |strftime()|. If empty, don't display a time stamp in 
    the status line. Example for |vimrc|: >

      let g:tstatus_timefmt = '%d-%b-%Y %H:%M'
<

                                                    *g:tstatus_exprs*
g:tstatus_exprs                (default: [])
    A list of |eval()| expressions. E.g. >

      call add(g:tstatus_exprs, 'mode()')

<   Users should use |:TStatusregister| to register values for the 
    status line. Users might have to call |TStatusForceUpdate()| in 
    order to properly update expressions listed in this variable.

                                                    *g:tstatus_names*
g:tstatus_names                (default: 'ai aw bin bomb bt cm cole cpo et fenc fdl ff js list paste sol sw ts tw wm enc fenc')
    A string or list of names that can be defined at startup for use 
    with |:TStatusregister|.

    See also |g:tstatus_events|.

                                                    *g:tstatus_ignore*
g:tstatus_ignore               (default: {})
    A dictionary of NAME => |REGEXP| FOR IGNORED VALUES.

                                                    *g:tstatus_events*
g:tstatus_events               (default: 'FocusGained,CmdwinLeave,FileType,SessionLoadPost,QuickFixCmdPost,EncodingChanged,BufEnter,CursorHold,CursorHoldI')
    |autocmd-events| on which the options in |g:tstatus_names| will be 
    compiled.
    If "*", update the values on every update of the 'statusline'.

                                                    *g:tstatus_colorscheme*
g:tstatus_colorscheme          (default: 'tstatus')
    If empty, don't set the statusline color.
    If a punctuation character, set the statusline color but assume 
    the user has created the appropriate highlight definitions for the 
    following highlight groups:

      StatusLineNormal
      StatusLineInsert
      StatusLineVisual

                                                    *:TStatus*
:TStatus
    Set or unset (with bang) 'statusline' and 'rulerformat'.

                                                    *:TStatusregister*
:TStatusregister [OPTIONS] OPT1[=LABEL1] OPT2[=LABEL2] ...
    Register a set of vim |options| or variables that should be watched. 
    Changes will be displayed in the statusline.

    This also saves the option's value at the time you call this command 
    for use with |:TStatusreset|.

    OPT can be any option or variable (with g:, b:, or w: prefix).

    LABEL can be either empty, a string, or a format string for 
    |printf()|. If LABEL is 'bool', the option is treated as a boolean 
    option/variable.

    OPTIONS can be:

      --event=AUTOCOMMAND_EVENTS ... Update the following options only on 
                                      these |autocommand-events|.

    See also |g:tstatus_names| and |g:tstatus_exprs|.

                                                    *:TStatusregister1*
:TStatusregister1 [OPTIONS] LABEL EXPRESSION
    Register one labeled vim expression.

                                                    *:TStatusreset*
:TStatusreset [OPT1 OPT2 ...]
    Reset all or some options to the value saved at the time when calling 
    |:TStatusregister|.



vim:tw=78:fo=w2croql:isk=!-~,^*,^|,^":ts=8:ft=help:norl:
